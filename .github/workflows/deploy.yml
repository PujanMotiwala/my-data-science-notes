name: Deploy MkDocs Site to GitHub Pages

# Controls when the workflow will run
on:
  # Triggers the workflow on push events but only for the main branch
  push:
    branches: [ "main" ] # Or "master" if that's your main branch name

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4 # Checks out your repository code

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10' # Match your local Python version if desired
          cache: 'pip' # Cache pip dependencies

      - name: Install dependencies
        run: pip install -r requirements.txt # Installs packages from your requirements file

      - name: Build MkDocs site
        run: mkdocs build # Builds the static site into the 'site/' directory

      - name: Upload build artifact
        uses: actions/upload-pages-artifact@v3 # Uploads the 'site' directory for deployment
        with:
          path: ./site

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }} # Sets the deployment environment URL
    runs-on: ubuntu-latest
    needs: build # Requires the 'build' job to complete successfully
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4 # Deploys the uploaded artifact
